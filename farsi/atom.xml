<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>سروش صفری</title>

  <link href="https://thecoci.me/farsi/feed.xml" rel="self"/>
  <link href="https://thecoci.me/farsi"/>

  <updated>2018-05-10T18:02:34+0200</updated>
  <id>https://thecoci.me/farsi</id>
  
  <author>
    <name>سروش صفری</name>
  </author>
    
  <generator>Mira</generator>

  
  <entry>
    <title>عوض شو</title>
    <link href="https://thecoci.me/farsi/newyear/"/>
    <id>https://thecoci.me/farsi/newyear/</id>

    <published>2018-03-19T09:38:35+0200</published>
    <updated>2018-03-19T09:38:35+0200</updated>

    <content type="html"><![CDATA[<a name="more"></a>
<p>سلام ٬ سروش هستم یه گیک مبتدی</p>

<p>آخ آخ آخ دیگه داره ۹۶ تموم میشه و وارد سال جدید میشیم با تموم بدیهاش ( از نظر من که هیج خوبی از لحاظ کشوری که توش زندگی میکنیم نداریم) اما یه سری خوبی های افراد باعث میشه اونا به چشم نیان اما از همه اینا که بگذریم میخوام راجع به یه موضوعی حرف بزنم که شاید دردی از حالمون دوا کنه .</p>

<p>میگم چی میشه بیاین یه لیستی از اون کارایی که قراره از شنبه شروع کنین و الان ۱۰ سال داره عقب میافته تهیه کنین بعد واقعا بیاین شروعش کنین از همین چهارشنبه (۱ فروردین ۹۷) ٬ هاع ؟ نمیشه ؟ میشه ؟ حالش نیست ؟ برو بابا ؟؟؟!!</p>

<p>ولی جدی چقدر خوب میشه اگه بتونیم ۵۰٪ در صد فکرها و ایده هایی که تو سرمون هستش و اجرایی نکردیم و شروع کنیم ٬ مثلا حساب کن روزی ۱۰ تا لغت حفظ کنی ٬ باشگاه بری ٬ شروع کنی به برنامه نویسی و کلی چیزا دیگه که سال دیگه که داره ۹۸ میشه شاد باشیم .</p>

<p>من خودم میخوام شروع کردم به  روزی به ۱۰ تا لغت حفظ کردن که نتیجه میشه :</p>

<p>۱۰ * ۳۶۵ = ۳۶۵۰</p>

<p>اگه ۳۶۵۰ کلمه تو ۱ سال یاد بگیرم اون سال دیگه خارجی حرف میزنم کلا ٬ در کل این پست طولانی و نصیحتی نیست فقط خواستم یه ایده ای داده باشم .</p>

<p>سال خوبی داشته باشین</p>
]]></content>

    <summary>
    &lt;p&gt;سلام ٬ سروش هستم یه گیک مبتدی

آخ آخ آخ دیگه داره ۹۶ تموم میشه و وارد سال جدید میشیم با تموم بدیهاش ( از نظر من که هیج خوبی از لحاظ کشوری که توش زندگی میکنیم نداریم) اما یه سری خوبی های افراد باعث میشه اونا به چشم نیان اما از همه اینا که بگذریم میخوام راجع به یه موضوعی حرف بزنم که شاید دردی از حالمون دوا کنه .

میگم چی میشه بیاین یه لیستی از اون کارایی که قراره از شنبه شروع کنین و الان ۱۰ سال داره عقب میافته تهیه کنین بعد واقعا بیاین شروعش کنین از همین چهارشنبه (۱ فروردین ۹۷) ٬ هاع ؟ نمیشه ؟ میشه ؟ حالش نیست ؟ برو بابا ؟؟؟!!

ولی جدی چقدر خوب میشه اگه بتونیم ۵۰٪ در صد فکرها و ایده هایی که تو س&lt;/p&gt;
    </summary>
  </entry>
  
  <entry>
    <title>ساخت یک بلاکچین</title>
    <link href="https://thecoci.me/farsi/blockchain/"/>
    <id>https://thecoci.me/farsi/blockchain/</id>

    <published>2018-02-24T18:38:25+0200</published>
    <updated>2018-02-24T18:38:25+0200</updated>

    <content type="html"><![CDATA[<a name="more"></a>
<p><img src="/farsi/images/blockchain.jpg" alt="block" id="block" /></p>

<h3>یادگیری بلاکچین با ساختن یک بلاکچین</h3>

<h5>پرسرعت ترین راه برای یادگرفتن اینکه بلاکچین ها چگونه کار میکنند ، ساختن یکی از آنهاست (سروش) 😀.</h5>

<p>اگه شما در حال خوندن این مقاله هستین دلیلش این که مثل من از پیدایش این همه رمز ارز دچار سردرگمی شدین و میخواین بدونین که بلاکچین ها چطوری کار میکنند ( پایه و اساس تکنولوژی بکار رفته در بلاکچین) .</p>

<p>اما فهمیدن بلاکچین راحت نیست ( حداقل برای من نبوده ) و خیلی تحقیق کردم تا تونستم به یه حدی از دانش بلاکچین دست پیدا کنم .</p>

<p>من یادگیری با انجام دادن رو خیلی دوست دارم و اگه شما هم اینطوری باشین اخر این مطلب یه بلاکچین شخصی میتونین برای خودتون درست کنین .</p>

<h3>قبل از شروع</h3>

<p>اگه میخواین در مورد بلاکچین اطلاعات بیشتر کسب کنید این پادکست فوق العاده از جادی پیشنهاد میشه : <a href="https://jadi.net/2017/10/radiogeek-77-blockchain/">radio geek blockCahin</a></p>

<p>یادتون باشه بلاکچین تغییر ناپذیر است و اینکه به اطلاعات ثبت شده در زنجیره یک بلاک ( Block) گفته میشه که بلاک ها میتونن شامل تراکنش ها ، فایل ها و اطلاعات باشند . اما نکته مهم اینکه اونها به صورت زنجیر بهم متصل میشن با استفاده از هش (Hash) .</p>

<p>در اصل به زبان ساده اگه بخوام بگم اینطوری میشه :</p>

<p>ببنید در نظر بگیرین ما یه سری تراکنش  قرار انجام بدیم که اینها باید ثبت بشن ، پس یک برگه کاغذ برمیداریم و شروع میکنیم تراکنش های انجام شده رو داخلش ثبت مکنیم اما به یه جایی میرسیم که این کاغذ پر میشه و نیاز داریم تا یه برگه جدید برداریم ، حال به همین منوال (ترتیب) برگه های پر شده رو بهم منگنه می کنیم تا مثلا یه دفتری تشکیل بشه از تمام تراکنش های اول تا اخر اما یه نکته باقی میمونه اونم اینکه از کجا بفهمیم یه نفر بلاک های قبل رو دستکاری نکنه که از یه متد استفاده میکنیم به اسم proof of work که بعدا در موردش حرف میزنیم اما حالا اینجا اون برگه ها رو بهشون block (بلاک) میگیم و این منگنه که این برگه ها رو بهم وصل میکنه از جنس هش (hash ) است و این دفتر میشه بلاکچین ( زنجیره ی بلاک های متصل شده بهم ) خدایی واضح تر دیگه نمیتونم توضیح بدم .</p>

<p>و سورس کد این اموزش رو میتونین تو گیتهاب من ببنید : <a href="https://github.com/coci/blockChain">github blockCahin</a></p>

<h5>چه کسانی میتونن با اموزش پیش برن ؟</h5>

<p>شما باید با پایه و اساس زبان برنامه نوسی پایتون (python ) اشنا باشین و بتونین به راحتی کدهاش رو بخونین و بنویسین و بهتر میشه اگه کمی اطلاعات در مورد " HTTP request " ها چگونه کار میکنن داشته باشین .</p>

<h5>چی لازم داریم ؟</h5>

<p>مطمئن باشین ورژن پایتون (python) نصب شده 3.6 باشه و پکیج منیجر pip بروی ماشین شما نصب باشد و همچنین با استفاده از دستور زیر کتابخانه های flask و request  رو نصب کنید :</p>

<pre><code>pip3 install Flask==0.12.2 requests==2.18.4
</code></pre>

<p>ای بابا داشت یادم میرفت به یه کلاینت HTTP نیاز دارین(مثل postMan یا paw و یا cUrl)  .</p>

<h3>قسمت ۱ : ساخت بلاکچین</h3>

<p>ادیتور مورد علاقه تون رو بازکنید و یه فایل جدید بسازید ( من اسم فایل رو گزاشتم : blockChain.py ) و اینکه من در کل از یک فایل استفاده میکنیم .</p>

<h4>معرفی کردن بلاکچین</h4>

<p>ما میخواهیم کلاس بلاکچین رو بسازیم که یه لیست خالی برای ما می سازه تا بلاکچین خودمون رو توش ذخیره کنیم و اینکه بتونیم تراکنش ها رو هم ذخیره کنیم :</p>

<pre><code class="language-python">class BlockChain(object):
    def __init__(self):
        self.chain = []
        self.current_transactions = []

    def new_block(self):
        #create a new block and adds it to the chain
        pass

    def new_transactions(self):
        #adds a new transaction to the list of transactions

    @staticmethod
    def hash(block):
        # hashes a block
        pass

    @property
    def last_block(self):
        # return the last block in the chain
        pass
</code></pre>

<p>کلاس بلاکچین ما مسئول مدیریت کردن زنجیره هست و تراکنش ها رو ذخیره میکنه و چندین متد (method) کمک کننده برای اضافه کردن بلاک جدید به زنجیره دارد .</p>

<h3>هر بلاک چه شکلی است ؟</h3>

<p>هر بلاک دارای شاخص (index ) ، لیست تراکنش ها ، برچسب زمان ( timestamp) ، یک گواهی ( a proof ) و هش (hash) بلاک قبلی میباشد که میتونین مثالی در این مورد ببنید :</p>

<pre><code>block = {
    'index': 1,
    'timestamp': 1506057125.900785,
    'transactions': [
        {
            'sender': "8527147fe1f5426f9dd545de4b27ee00",
            'recipient': "a77f5cdfa2934df3954a5c7c7da5df1f",
            'amount': 5,
        }
    ],
    'proof': 324984774000,
    'previous_hash': "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824"
}
</code></pre>

<p>در این نقطه ، ایده کلی بلاکچین مشخص شد ، هر بلاک دارای محتوا خودش و hash بلاک قبلی است . این قضیه خیلی محکم و استوار و بخاطر همین بالاتر هم بهش اشاره کردم که بلاکچین تغییر ناپذیر چون : اگه حمله کننده (attacker) بلاک رو دستکاری کنه تمام  hash بلاک های بعدی هم اشتباه میشه در نتیجه کلا هرگونه دستکاری امکان پذیر نیست .</p>

<p>حس نمیکنی این قضیه چقدر جالبه ؟ اگه که نه باید بشینی ساعت ها درموردش فکر کنی ، این هسته اصلی تفکر پشت بلاکچین است .</p>

<h4>اضافه کردن تراکنش به بلاک</h4>

<p>ما یه راهی نیاز داریم تا تراکنش ها رو به بلاک اضافه کنیم . تابع new_transaction مسئولیت اینکار رو داره (کدهای تابع new_transactin رو به سورس اضافه کنید ) . اجازه بدین یکم بریم جلوتر :</p>

<pre><code>class Blockchain(object):
    ...

    def new_transaction(self, sender, recipient, amount):
        """
        Creates a new transaction to go into the next mined Block
        :param sender: &lt;str&gt; Address of the Sender
        :param recipient: &lt;str&gt; Address of the Recipient
        :param amount: &lt;int&gt; Amount
        :return: &lt;int&gt; The index of the Block that will hold this transaction
        """

        self.current_transactions.append({
            'sender': sender,
            'recipient': recipient,
            'amount': amount,
        })

        return self.last_block['index'] + 1
</code></pre>

<p>بعد از اینکه تابع new_trancation تراکنش رو به بلاک اضافه کرد ، عدد بلاک بعدی رو برمیگردونه (return) .</p>

<p>این در اینده خیلی موثر ، برای اینکه کاربر چندین تراکنش انجام میده .</p>

<h4>ساخت بلاک جدید</h4>

<p>وقتی یک بلاک کامل شد ما نیاز داریم یک بلاک بدون پیشنه به بلاکچین اضافه کنیم ، همچنین باید یک گواهی (proof) به بلاک جدید اضافه کنیم که این گواهی همان ماین کردن (mining) می باشد که بهش حسن انجام کار یا proof of work نیز گفته میشود که بعدا در موردش صحبت میکنیم به علاوه اینکه برای ساخت بلاک جدید باید توابع new_block , new_transaction و hash رو هم اماده کنیم :</p>

<pre><code>import hashlib
import json
from time import time


class Blockchain(object):
    def __init__(self):
        self.current_transactions = []
        self.chain = []

        # Create the genesis block
        self.new_block(previous_hash=1, proof=100)

    def new_block(self, proof, previous_hash=None):
        """
        Create a new Block in the Blockchain

        :param proof: &lt;int&gt; The proof given by the Proof of Work algorithm
        :param previous_hash: (Optional) &lt;str&gt; Hash of previous Block
        :return: &lt;dict&gt; New Block
        """

        block = {
            'index': len(self.chain) + 1,
            'timestamp': time(),
            'transactions': self.current_transactions,
            'proof': proof,
            'previous_hash': previous_hash or self.hash(self.chain[-1]),
        }

        # Reset the current list of transactions
        self.current_transactions = []

        self.chain.append(block)
        return block

    def new_transaction(self, sender, recipient, amount):
        """
        Creates a new transaction to go into the next mined Block

        :param sender: &lt;str&gt; Address of the Sender
        :param recipient: &lt;str&gt; Address of the Recipient
        :param amount: &lt;int&gt; Amount
        :return: &lt;int&gt; The index of the Block that will hold this transaction
        """
        self.current_transactions.append({
            'sender': sender,
            'recipient': recipient,
            'amount': amount,
        })

        return self.last_block['index'] + 1

    @property
    def last_block(self):
        return self.chain[-1]

    @staticmethod
    def hash(block):
        """
        Creates a SHA-256 hash of a Block

        :param block: &lt;dict&gt; Block
        :return: &lt;str&gt;
        """

        # We must make sure that the Dictionary is Ordered, or we'll have inconsistent hashes
        block_string = json.dumps(block, sort_keys=True).encode()
        return hashlib.sha256(block_string).hexdigest()

</code></pre>

<p>من یک سری کامنت به کد اضافه کردم برای اینکه مراحل مختلف و بفهمین ، کار ما با تعریف بلاکچین تمام شد ولی باید تعجب کرده باشین که چطوری بلاک جدید ساخته میشه و ماین میشه .</p>

<h4 id="proofofwork">در مورد proof of work</h4>

<p>به زبان ساده اگه بخوام بگم :</p>

<p>ببینید گفتیم ما برای ساخت بلاک جدید میایم بلاک قبلی رو hash میکنیم و به بلاک جدید اضافه میکنیم ، حالا ما میایم سطح امنیتی بلاک رو بیشتر میکنیم و میگیم مثلا یه عددی به علاوه hash بلاک مثلا حاصلی کمتر از ۱۰۰ داشته باشه یا ۴ رقم اخر صفر بشه(مسئله) که این عدد رو بهش "proof or proof of work" گفته میشه ، البته مسئله رو خود صاحب بلاک طرح میکنه ، اینطوری ما بلاک مهر و موم (sign) میکنیم و هیچکس نمیتونه توش دستکاری بکنه . اگه متوجه نشدین به مثال توجه کنین :</p>

<p>تصمیم داریم حاصل hash یه عددی ضرب در hash یک عدد دیگه با صفر تموم بشه یعنی :</p>

<pre><code>hash(x*y) = ac23dc...0
</code></pre>

<p>و برای این مثال x رو ۵ در نظر میگیریم :</p>

<pre><code>from hashlib import sha256
x = 5
y = 0  # We don't know what y should be yet...
while sha256(f'{x*y}'.encode()).hexdigest()[-1] != "0":
    y += 1
print(f'The solution is y = {y}')
</code></pre>

<p>که جواب میشه y مساوی ۲۱ یعنی اگه x رو برابر با ۵ و y رو برابر با ۲۱ قرار بدیم حاصل ضرب hash این ۲ عدد با صفر تموم میشه :</p>

<pre><code>hash(5 * 21) = 1253e9373e...5e3600155e860
</code></pre>

<p>خوب بعد از دیدن این مثال شما فرض کنید x همون hash بلاک هست و مسئله میگه مقدار x رو که داریم باید به علاوه یه عددی کنیم که اینجا y  میشه عدد مجهول که جواب اخر با صفر تموم بشه :</p>

<pre><code>x = hash(block)                     # we have "x"
x + y = 1253e9373e...5e3600155e860  # we don't have "y"

# now "y" is our proof =&gt; proof = 21 or proof of work = 21
</code></pre>

<p>که این الگوریتم مسابقه ای رو برپا میکنه بین کاربران که حاصلش کمک میکنه به ساخت بلاک جدید .</p>

<h4 id="proofofwork">پیاده سازی پایه و اساس proof of work</h4>

<p>اجازه بدین این رو تو پروژه اضافه کنیم :</p>

<blockquote>
  <p>الگوریتم ما اینه که عدد p رو طوری مشخص کنید که حاصل hash عدد p با hash بلاک قبلی به ما hash جدیدی رو برگردونه که ۴ عدد اخر صفر بشه.</p>
</blockquote>

<pre><code>import hashlib
import json

from time import time
from uuid import uuid4


class Blockchain(object):
    ...

    def proof_of_work(self, last_proof):
        """
        Simple Proof of Work Algorithm:
         - Find a number p' such that hash(pp') contains leading 4 zeroes, where p is the previous p'
         - p is the previous proof, and p' is the new proof

        :param last_proof: &lt;int&gt;
        :return: &lt;int&gt;
        """

        proof = 0
        while self.valid_proof(last_proof, proof) is False:
            proof += 1

        return proof

    @staticmethod
    def valid_proof(last_proof, proof):
        """
        Validates the Proof: Does hash(last_proof, proof) contain 4 leading zeroes?

        :param last_proof: &lt;int&gt; Previous Proof
        :param proof: &lt;int&gt; Current Proof
        :return: &lt;bool&gt; True if correct, False if not.
        """

        guess = f'{last_proof}{proof}'.encode()
        guess_hash = hashlib.sha256(guess).hexdigest()
        return guess_hash[:4] == "0000"
</code></pre>

<p>الان کلاس بلاکچین ما کامل شد .</p>

<h3 id="api">قسمت ۲ : کار با بلاکچین با استفاده از API</h3>

<p>برای اینکار من از فریمورک Flash در python استفاده میکنم . این فریمورک به ما این امکان رو میده که از بلاکچین خودمون با استفاده از تکنولوژی HTTP request استفاده کنیم .</p>

<p>ما این متد ها رو می سازیم :</p>

<pre><code>/transaction/new  #to create a new transaction to a blockchain
/mine   # to tell our server to mine a new block
/chain   # to return the full blockchain
</code></pre>

<h4 id="flask">نصب Flask</h4>

<p>اجازه بدین قطعه کدی رو به پروژه اضافه کنیم :</p>

<pre><code>import hashlib
import json
from textwrap import dedent
from time import time
from uuid import uuid4

from flask import Flask


class Blockchain(object):
    ...


# Instantiate our Node
app = Flask(__name__)

# Generate a globally unique address for this node
node_identifier = str(uuid4()).replace('-', '')

# Instantiate the Blockchain
blockchain = Blockchain()


@app.route('/mine', methods=['GET'])
def mine():
    return "We'll mine a new Block"

@app.route('/transactions/new', methods=['POST'])
def new_transaction():
    return "We'll add a new transaction"

@app.route('/chain', methods=['GET'])
def full_chain():
    response = {
        'chain': blockchain.chain,
        'length': len(blockchain.chain),
    }
    return jsonify(response), 200

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
</code></pre>

<h4>قسمت اخر تراکنش ها</h4>

<p>این درخواستی است که کاربر برای انجام تراکنش به سرور ارسال میکنه :</p>

<pre><code>{
 "sender": "my address",
 "recipient": "someone else's address",
 "amount": 5
}
</code></pre>

<p>اجازه بدین تابع اضافه کردن تراکنش رو به کد اضافه کنیم :</p>

<pre><code>import hashlib
import json
from textwrap import dedent
from time import time
from uuid import uuid4

from flask import Flask, jsonify, request

...

@app.route('/transactions/new', methods=['POST'])
def new_transaction():
    values = request.get_json()

    # Check that the required fields are in the POST'ed data
    required = ['sender', 'recipient', 'amount']
    if not all(k in values for k in required):
        return 'Missing values', 400

    # Create a new Transaction
    index = blockchain.new_transaction(values['sender'], values['recipient'], values['amount'])

    response = {'message': f'Transaction will be added to Block {index}'}
    return jsonify(response), 201
</code></pre>

<h4>قسمت اخر ماین کردن</h4>

<p>قسمت اخر ماین کردن جادویی میشه ، چون این کارا رو قرار انجام بده :</p>

<ol>
<li><p>محاسبه proof of work</p></li>
<li><p>به برنده ۱ سکه اضافه میکنه</p></li>
<li><p>بلاک جدید رو میسازه و به زنجیره اضافه میکنه</p></li>
</ol>

<pre><code>import hashlib
import json

from time import time
from uuid import uuid4

from flask import Flask, jsonify, request

...

@app.route('/mine', methods=['GET'])
def mine():
    # We run the proof of work algorithm to get the next proof...
    last_block = blockchain.last_block
    last_proof = last_block['proof']
    proof = blockchain.proof_of_work(last_proof)

    # We must receive a reward for finding the proof.
    # The sender is "0" to signify that this node has mined a new coin.
    blockchain.new_transaction(
        sender="0",
        recipient=node_identifier,
        amount=1,
    )

    # Forge the new Block by adding it to the chain
    previous_hash = blockchain.hash(last_block)
    block = blockchain.new_block(proof, previous_hash)

    response = {
        'message': "New Block Forged",
        'index': block['index'],
        'transactions': block['transactions'],
        'proof': block['proof'],
        'previous_hash': block['previous_hash'],
    }
    return jsonify(response), 200
</code></pre>

<h3>قسمت ۳ : کار با بلاکچین</h3>

<p>تو قسمت اول سرور رو روشن کنید :</p>

<pre><code>python3 blockchain.py
* * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
</code></pre>

<h4>ماین</h4>

<p>حالا میخوایم ماین کردن و امتحان کنیم با ساخت یه درخواست از جنس GET و ارسال به سرور :</p>

<pre><code>http://localhost:5000/mine
</code></pre>

<p>طبق تصویر زیر (برنامه postman)</p>

<p><img src="/farsi/images/mine.jpg" alt="mine" id="mine" /></p>

<h4>انجام تراکنش</h4>

<p>حالا میخوایم تراکنش کردن  رو امتحان کنیم با ساخت یه درخواست از جنس POST با بدنه(body ) زیر و ارسال به سرور :</p>

<p>سرور:</p>

<pre><code>http://localhost:5000/transactions/new
</code></pre>

<p>بدنه(body) رو مطابق شکل زیر قرار بدین :</p>

<p><img src="/farsi/images/tansac.jpg" alt="transac" id="transac" /></p>

<p>البته اگه شما از برنامه POSTMAN استفاده نمیکنید میتونید از cURL استفاده کنید :</p>

<pre><code>$ curl -X POST -H "Content-Type: application/json" -d '{
 "sender": "d4ee26eee15148ee92c6cd394edd974e",
 "recipient": "someone-other-address",
 "amount": 5
}' "http://localhost:5000/transactions/new"
</code></pre>

<p>من سرور رو الان یه بار ریستارت کردم و ۲ تا بلاک رو ماین کردم که الان در کل ۳ تا بلاک هست ، ۲ تا استفاده کردم و یکی بلاک جدید و خالی اما میخوام وضعیت کل بلاکچین رو بررسی کنیم تا از صحتش مطمئن بشم با ارسال درخواست به :</p>

<pre><code>http://localhost:5000/chain
</code></pre>

<p>و جواب زیر رو دریافت کردم :</p>

<pre><code>{
  "chain": [
    {
      "index": 1,
      "previous_hash": 1,
      "proof": 100,
      "timestamp": 1506280650.770839,
      "transactions": []
    },
    {
      "index": 2,
      "previous_hash": "c099bc...bfb7",
      "proof": 35293,
      "timestamp": 1506280664.717925,
      "transactions": [
        {
          "amount": 1,
          "recipient": "8bbcb347e0634905b0cac7955bae152b",
          "sender": "0"
        }
      ]
    },
    {
      "index": 3,
      "previous_hash": "eff91a...10f2",
      "proof": 35089,
      "timestamp": 1506280666.1086972,
      "transactions": [
        {
          "amount": 1,
          "recipient": "8bbcb347e0634905b0cac7955bae152b",
          "sender": "0"
        }
      ]
    }
  ],
  "length": 3
}
</code></pre>

<h4>تمام</h4>

<h3>سخن پایانی :</h3>

<ol>
<li><p>واقعا سعی کردم توضیح کامل باشه پس اگه سوالی داشتین از راه های ارتباطی موجود www.thecoci.me استفاده کنید و سوالاتتون رو بپرسین</p></li>
<li><p>کد نهایی شما باید این شکلی شده باشه :</p></li>
</ol>

<pre><code>import hashlib
import json
from time import time
from urllib.parse import urlparse
from uuid import uuid4

import requests
from flask import Flask, jsonify, request


class Blockchain:
    def __init__(self):
        self.current_transactions = []
        self.chain = []
        self.nodes = set()

        # Create the genesis block
        self.new_block(previous_hash='1', proof=100)

    def register_node(self, address):
        """
        Add a new node to the list of nodes
        :param address: Address of node. Eg. 'http://192.168.0.5:5000'
        """

        parsed_url = urlparse(address)
        if parsed_url.netloc:
            self.nodes.add(parsed_url.netloc)
        elif parsed_url.path:
            # Accepts an URL without scheme like '192.168.0.5:5000'.
            self.nodes.add(parsed_url.path)
        else:
            raise ValueError('Invalid URL')


    def valid_chain(self, chain):
        """
        Determine if a given blockchain is valid
        :param chain: A blockchain
        :return: True if valid, False if not
        """

        last_block = chain[0]
        current_index = 1

        while current_index &lt; len(chain):
            block = chain[current_index]
            print(f'{last_block}')
            print(f'{block}')
            print("\n-----------\n")
            # Check that the hash of the block is correct
            if block['previous_hash'] != self.hash(last_block):
                return False

            # Check that the Proof of Work is correct
            if not self.valid_proof(last_block['proof'], block['proof'], last_block['previous_hash']):
                return False

            last_block = block
            current_index += 1

        return True

    def resolve_conflicts(self):
        """
        This is our consensus algorithm, it resolves conflicts
        by replacing our chain with the longest one in the network.
        :return: True if our chain was replaced, False if not
        """

        neighbours = self.nodes
        new_chain = None

        # We're only looking for chains longer than ours
        max_length = len(self.chain)

        # Grab and verify the chains from all the nodes in our network
        for node in neighbours:
            response = requests.get(f'http://{node}/chain')

            if response.status_code == 200:
                length = response.json()['length']
                chain = response.json()['chain']

                # Check if the length is longer and the chain is valid
                if length &gt; max_length and self.valid_chain(chain):
                    max_length = length
                    new_chain = chain

        # Replace our chain if we discovered a new, valid chain longer than ours
        if new_chain:
            self.chain = new_chain
            return True

        return False

    def new_block(self, proof, previous_hash):
        """
        Create a new Block in the Blockchain
        :param proof: The proof given by the Proof of Work algorithm
        :param previous_hash: Hash of previous Block
        :return: New Block
        """

        block = {
            'index': len(self.chain) + 1,
            'timestamp': time(),
            'transactions': self.current_transactions,
            'proof': proof,
            'previous_hash': previous_hash or self.hash(self.chain[-1]),
        }

        # Reset the current list of transactions
        self.current_transactions = []

        self.chain.append(block)
        return block

    def new_transaction(self, sender, recipient, amount):
        """
        Creates a new transaction to go into the next mined Block
        :param sender: Address of the Sender
        :param recipient: Address of the Recipient
        :param amount: Amount
        :return: The index of the Block that will hold this transaction
        """
        self.current_transactions.append({
            'sender': sender,
            'recipient': recipient,
            'amount': amount,
        })

        return self.last_block['index'] + 1

    @property
    def last_block(self):
        return self.chain[-1]

    @staticmethod
    def hash(block):
        """
        Creates a SHA-256 hash of a Block
        :param block: Block
        """

        # We must make sure that the Dictionary is Ordered, or we'll have inconsistent hashes
        block_string = json.dumps(block, sort_keys=True).encode()
        return hashlib.sha256(block_string).hexdigest()

    def proof_of_work(self, last_block):
        """
        Simple Proof of Work Algorithm:
         - Find a number p' such that hash(pp') contains leading 4 zeroes
         - Where p is the previous proof, and p' is the new proof

        :param last_block: &lt;dict&gt; last Block
        :return: &lt;int&gt;
        """

        last_proof = last_block['proof']
        last_hash = self.hash(last_block)

        proof = 0
        while self.valid_proof(last_proof, proof, last_hash) is False:
            proof += 1

        return proof

    @staticmethod
    def valid_proof(last_proof, proof, last_hash):
        """
        Validates the Proof
        :param last_proof: &lt;int&gt; Previous Proof
        :param proof: &lt;int&gt; Current Proof
        :param last_hash: &lt;str&gt; The hash of the Previous Block
        :return: &lt;bool&gt; True if correct, False if not.
        """

        guess = f'{last_proof}{proof}{last_hash}'.encode()
        guess_hash = hashlib.sha256(guess).hexdigest()
        return guess_hash[:4] == "0000"


# Instantiate the Node
app = Flask(__name__)

# Generate a globally unique address for this node
node_identifier = str(uuid4()).replace('-', '')

# Instantiate the Blockchain
blockchain = Blockchain()


@app.route('/mine', methods=['GET'])
def mine():
    # We run the proof of work algorithm to get the next proof...
    last_block = blockchain.last_block
    proof = blockchain.proof_of_work(last_block)

    # We must receive a reward for finding the proof.
    # The sender is "0" to signify that this node has mined a new coin.
    blockchain.new_transaction(
        sender="0",
        recipient=node_identifier,
        amount=1,
    )

    # Forge the new Block by adding it to the chain
    previous_hash = blockchain.hash(last_block)
    block = blockchain.new_block(proof, previous_hash)

    response = {
        'message': "New Block Forged",
        'index': block['index'],
        'transactions': block['transactions'],
        'proof': block['proof'],
        'previous_hash': block['previous_hash'],
    }
    return jsonify(response), 200


@app.route('/transactions/new', methods=['POST'])
def new_transaction():
    values = request.get_json()

    # Check that the required fields are in the POST'ed data
    required = ['sender', 'recipient', 'amount']
    if not all(k in values for k in required):
        return 'Missing values', 400

    # Create a new Transaction
    index = blockchain.new_transaction(values['sender'], values['recipient'], values['amount'])

    response = {'message': f'Transaction will be added to Block {index}'}
    return jsonify(response), 201


@app.route('/chain', methods=['GET'])
def full_chain():
    response = {
        'chain': blockchain.chain,
        'length': len(blockchain.chain),
    }
    return jsonify(response), 200


@app.route('/nodes/register', methods=['POST'])
def register_nodes():
    values = request.get_json()

    nodes = values.get('nodes')
    if nodes is None:
        return "Error: Please supply a valid list of nodes", 400

    for node in nodes:
        blockchain.register_node(node)

    response = {
        'message': 'New nodes have been added',
        'total_nodes': list(blockchain.nodes),
    }
    return jsonify(response), 201


@app.route('/nodes/resolve', methods=['GET'])
def consensus():
    replaced = blockchain.resolve_conflicts()

    if replaced:
        response = {
            'message': 'Our chain was replaced',
            'new_chain': blockchain.chain
        }
    else:
        response = {
            'message': 'Our chain is authoritative',
            'chain': blockchain.chain
        }

    return jsonify(response), 200


if __name__ == '__main__':
    from argparse import ArgumentParser

    parser = ArgumentParser()
    parser.add_argument('-p', '--port', default=5000, type=int, help='port to listen on')
    args = parser.parse_args()
    port = args.port

    app.run(host='0.0.0.0', port=port)
</code></pre>

<h4>و در اخر سروش هستم یه گیک مبتدی و همیشه در حال یادگیری .</h4>
]]></content>

    <summary>
    &lt;p&gt;
یادگیری بلاکچین با ساختن یک بلاکچین

پرسرعت ترین راه برای یادگرفتن اینکه بلاکچین ها چگونه کار میکنند ، ساختن یکی از آنهاست (سروش) 😀.

اگه شما در حال خوندن این مقاله هستین دلیلش این که مثل من از پیدایش این همه رمز ارز دچار سردرگمی شدین و میخواین بدونین که بلاکچین ها چطوری کار میکنند ( پایه و اساس تکنولوژی بکار رفته در بلاکچین) .

اما فهمیدن بلاکچین راحت نیست ( حداقل برای من نبوده ) و خیلی تحقیق کردم تا تونستم به یه حدی از دانش بلاکچین دست پیدا کنم .

من یادگیری با انجام دادن رو خیلی دوست دارم و اگه شما هم اینطوری باشین اخر این مطلب یه بلاکچین شخصی میتونین برای خودتون درست کنین .

قبل از شروع

&lt;/p&gt;
    </summary>
  </entry>
  
  <entry>
    <title>کتابی که هر برنامه نویسی باید بخونه</title>
    <link href="https://thecoci.me/farsi/کتابی-که-هر-برنامه-نویسی-باید-بخونه/"/>
    <id>https://thecoci.me/farsi/کتابی-که-هر-برنامه-نویسی-باید-بخونه/</id>

    <published>2018-02-20T18:42:24+0200</published>
    <updated>2018-02-20T18:42:24+0200</updated>

    <content type="html"><![CDATA[<a name="more"></a>
<p><img src="/farsi/images/book.jpg" alt="book" id="book" /></p>

<p>نوشتن کد باید جوری باشه که هر برنامه نویسی که کد رو میبینه بتونه درک کنه ، اما واقعیت اینه که ۲۰٪ برنامه نویس ها میتونن اینکار رو انجام بدن .</p>

<blockquote>
  <p>هر احمقی میتونه کدی بنویسه که کامپیوتر بفهمه . برنامه نویس های خوب کدی رو می نویسن که انسانها بتونن بفهمن . (مارتین فولر)</p>
</blockquote>

<p>وقتی من شروع کردم به اینکه کدی قابل خوندن بنویسم متوجه شدم کدهای من شروع کردن به :</p>

<ul>
<li>راحت تر شدن برای تغییراتی که در اینده در پروژه ایجاد کردم(maintain)</li>
<li>راحت تر شدن برای بازنویسی (refactor)</li>
<li>قابل استفاده مجدد(reusable)</li>
<li>سازگارتر(consistent)</li>
</ul>

<h3>کتاب</h3>

<p>کتاب رابرت مارتین ( clean code ) کتاب مقدس همه برنامه نویس هاست . این کتاب در مورد نحوه کد نوشتن ، رفتار و اتوماتیک کردن تست های پروژه حرف میزنه .</p>

<h3>تمرین کنیم</h3>

<p>یکی از قسمت های کتاب درباره نامگذاری درست و معنا دار بود که یه مثالی در موردش میزنم :</p>

<pre><code class="language-python">def calc(n1,n2)
    return n1/n2
end 
</code></pre>

<p>ایا فکر میکنی " calc "  اسم مناسبی برای این تابع است ؟ اما مارتین میگه نه ، چرا ؟</p>

<ol>
<li><p>اسم "calc " اختصاری</p></li>
<li><p>توابع کارهایی رو انجام میدن ، باید اسمشون فعل باشه</p></li>
<li><p>حتی اگه اسم "calc" رو به "calculate" تغییر بدم هنوز نامفهوم است .</p></li>
</ol>

<p>این تابع ۲ عدد رو به هم تقسیم میکنه ، پس تقسیم (divide) اسم جالبی می تونه باشه .</p>

<pre><code class="language-python">def divide(n1,n2)
    return n1 / n2
end
result = divide(1,2)
</code></pre>

<p>اما هنوز باهاش مشکل داریم وn1 و n2 معنادار نیستند . چی میشه اگه بهشون "مقسوم (dividend)" و "مقسوم علیه (divisor)" بگیم ؟ همین کار برای متغییر result انجام میدیم و اون رو به "quotient ( خارج قسمت)" تغییر میدیم .</p>

<pre><code class="language-python">def divide(dividend,divisor)
    return dividend / divisor
end
quotient = divide(1,2)
</code></pre>

<p>خیلی معنی دار و قابل فهم تر شد .</p>

<p>پیشنهاد من اینه که حتما این کتاب رو بخونین .</p>

<p>سروش هستم یه گیک مبتدی و ایده اینه تا اخر عمرم در حال یادگیری باشم .</p>
]]></content>

    <summary>
    &lt;p&gt;
نوشتن کد باید جوری باشه که هر برنامه نویسی که کد رو میبینه بتونه درک کنه ، اما واقعیت اینه که ۲۰٪ برنامه نویس ها میتونن اینکار رو انجام بدن .

  هر احمقی میتونه کدی بنویسه که کامپیوتر بفهمه . برنامه نویس های خوب کدی رو می نویسن که انسانها بتونن بفهمن . (مارتین فولر)

وقتی من شروع کردم به اینکه کدی قابل خوندن بنویسم متوجه شدم کدهای من شروع کردن به :

راحت تر شدن برای تغییراتی که در اینده در پروژه ایجاد کردم(maintain)
راحت تر شدن برای بازنویسی (refactor)
قابل استفاده مجدد(reusable)
سازگارتر(consistent)

کتاب

کتاب رابرت مارتین ( clean code ) کتاب مقدس همه برنامه نویس هاست . این کتاب در مورد نحو&lt;/p&gt;
    </summary>
  </entry>
  
  <entry>
    <title>میرا</title>
    <link href="https://thecoci.me/farsi/میرا/"/>
    <id>https://thecoci.me/farsi/میرا/</id>

    <published>2018-02-11T17:43:32+0200</published>
    <updated>2018-02-11T17:43:32+0200</updated>

    <content type="html"><![CDATA[<a name="more"></a>
<p><img src="/farsi/images/mirs.png" alt="mira" id="mira" /></p>

<p>سلام سروش هستم يك گيك در حال يادگيري .</p>

<p>چند وقت پيش بود كه با چند تا وبلاگ خيلي باحال آشنا شدم و كلي از نوشته هاشون رو خوندم و واقعا نظرم نسبت به وبلاگ كاملا عوض شد و عاشق اين سيستم شدم اما تصميم گرفتم براي خودم يكي راه بندازم تا هم به علاقه ام پرداخته باشم هم اينكه ديگران از تجربياتم استفاده كنن و در آخر اينكه يه جا خوندم كه نوشتن باعث تقويت قدرت مغز ميشه و كلي مزايا ديگه كه خودتون بخونيد .</p>

<p>افتادم دنبالش تا بهترين راه و براي ساخت يه وبلاگ روي هاست و دامنه شخصي ام پيدا كنم و در طول مسير با كلي ابزار آشنا شدم كه هر كدوم ويژگي هاي خاص خودشون رو داشتن با مزايا و معايب منحصر خودشون و اينكه بالاخره دست به كار شدم و وردپرس و نصب كردم كه واقعا اذيت كرد و اون كارها و آزادي هايي كه ميخواستم برام نداشت پس دوباره به جستجو ادامه دادم تا اينكه توي سورس يكي از وبلاگ هايي كه دیده بودم نوشته شده بود ساخته شده توسط ميرا ، ازون جايي كه وبلاگ باحالي بود حدس زدم ميرا بايد چيز خوبي باشه و سريع با يه سرچ ساده سايت اصلي ميرا رو پيدا كردم كه اينجا ميتونين شما هم ببينيد : <a href="https://miraxy.github.io/fa/"><strong>میرا</strong></a> </p>

<p>رفتم داخل سايتش و داكيومنتش رو خوندم ديدم عجب چيز خفن و كامليِ اين ميرا اما قبلش بگم كه من واقعا طرفدار متن باز يا همون open source هستم و اينكه ميرا متن باز بود و بهتر از همه اينا اينكه توسط يك ايراني ساخته شده بود بيشتر جذبم كرد كه برم امتحانش كنم .</p>

<p>بعد از خوندن داكيومنت ( اسناد ) هاي سايتش ،  ميرا رو با ٢ خط ساده دستور shell نصب كردم و شروع كردم به ساخت وبلاگ كه چيزي كمتر از ١٠ دقيقه زمان برد و وبلاگ آماده بود ( البته قالب وبلاگ و از قبل داشتم ) و حالا بايد اون رو روي هاست پياده سازي ميكردم كه يه توضيح كاملا مفصل براي اين قضيه سازنده محترم قرار داده كه هيچ نيازي به كمك كسي ندارين كه اونم انجام شد و الان در حال مشاهده نتيجه ميرا هستين :))</p>

<p>يه قسمتي كه خيلي نظرم رو جلب كرد اين بود كه ميتونيد اصلا هاست نخريد و كلا از گيت هاب براي انتشار سايت يا وبلاگتون به وسيله ميرا استفاده كنين ، به طور ساده تر :</p>

<p>شما ميرا و نصب ميكنين و وبلاگ رو در لوكال آماده ميكنين بعد محتواي سايت رو در گيت هاي منتشر ميكنين و به گيت هاب دامنه خودتون رو وصل ميكنين و ديگه هركسي آدرس دامنه شما رو وارد كنه محتوا از روي گيت هاب نمايش داده ميشه ( گيج كننده نيست اصلا تو داكيومنت ميرا كه فارسي هم هست قسمت انتشار موجود است و كامل توضيح داده شده ) اما يه چند نكته بايد اينجا اضافه كنم :</p>

<ol>
<li><p>فلسفه اصلي ميرا براي ساخت سايت هاي استاتيك ( اما به دليل نحوه كاركرد و دستوراتي كه داره براي سايت هاي ديناميك هم ميشه استفاده كرد )</p></li>
<li><p>به صورت مستقيم خودتون با كدهاي ميرا و سايت درگير هستين و هر قسمت رو كه بخواين مي تونين تعيير بدين بدون هيچ گونه محدوديت</p></li>
<li><p>داكيومنت كامل و غني به زبان فارسي و انگليسي </p></li>
<li><p>تمام كارهايي كه توي ميرا انجام ميدين با دستورات shell كه تماما داخل سايت راهنمايي براش وجود داره ( البته منظور از ساخت و نشر يك پست )</p></li>
<li><p>در يك زمان هر تعداد سايت كه بخواين مي تونين راه اندازي كنين</p></li>
<li><p>رايگان يه بهتره بگم متن باز</p></li>
<li><p>اگه مشكلي هم توي هر مرحله باهاش داشته باشين به راحتي در عرض ٢ دقيقه قابل حله</p>

<p>اينجا در كنار همه خوبي هايي كه داره مهم ترين نكته رو بگم و اون اينه كه آدمي بسيار دوست داشتني و با حوصله و واقعا با سواد پشت اين پروژه قرار داره : <a href="https://twitter.com/kiavash/"><strong>کیا</strong></a></p></li>
</ol>

<p>در كل واقعا خيلي خوشحالم با ميرا آشنا شدم و از همه اينا بهتر پيدا كردن يك دوست  به اسم كيا برام از همه چیز مهمتر بود و ايده اصليم اينِ كه تمام تلاشم رو براي بهتر شدنش بكنم و حداقل كاري كه ميتونستم بكنم اين بود كه اينجا در موردش بنويسم تا هم تبليغي براش باشه هم اينكه قدرداني كرده باشم از سازنده محترم :))</p>

<p>اصن از وقتي از ميرا استفاده مي كنم پوستم شفاف تر شده :))</p>

<p>راستي اگه تصميم گرفتين از ميرا استفاده كنين و سوالي داشتين هم مي تونين از سازنده ميرا وهم از من بپرسين .</p>

<p>لطفا با بازنشر اين مطلب به يك پروژه رايگان و متن باز ايراني  كمك كنين .</p>
]]></content>

    <summary>
    &lt;p&gt;
سلام سروش هستم يك گيك در حال يادگيري .

چند وقت پيش بود كه با چند تا وبلاگ خيلي باحال آشنا شدم و كلي از نوشته هاشون رو خوندم و واقعا نظرم نسبت به وبلاگ كاملا عوض شد و عاشق اين سيستم شدم اما تصميم گرفتم براي خودم يكي راه بندازم تا هم به علاقه ام پرداخته باشم هم اينكه ديگران از تجربياتم استفاده كنن و در آخر اينكه يه جا خوندم كه نوشتن باعث تقويت قدرت مغز ميشه و كلي مزايا ديگه كه خودتون بخونيد .

افتادم دنبالش تا بهترين راه و براي ساخت يه وبلاگ روي هاست و دامنه شخصي ام پيدا كنم و در طول مسير با كلي ابزار آشنا شدم كه هر كدوم ويژگي هاي خاص خودشون رو داشتن با مزايا و معايب منحصر خودشون و اينكه بالاخ&lt;/p&gt;
    </summary>
  </entry>
  
  <entry>
    <title>منجلاب مجازی</title>
    <link href="https://thecoci.me/farsi/منجلاب-مجازی/"/>
    <id>https://thecoci.me/farsi/منجلاب-مجازی/</id>

    <published>2018-02-09T11:44:24+0200</published>
    <updated>2018-02-09T11:44:24+0200</updated>

    <content type="html"><![CDATA[<a name="more"></a>
<p><img src="/farsi/images/social.jpeg" alt="socail media" id="socailmedia" /></p>

<p>سلام سروش هستم يه مبتدي در حال يادگيري .</p>

<p>امروز ميخوام در مورد يه مشكل كه خيلي وقته دارم باهاش دست و پنجه نرم ميكنم و تازه راه حلشو پيدا كردم يه حرفايي بزنم و ايده اين بود كه شايد بدرد شما هم بخوره و اگه حال و روز منو داشتین به کمکتون بیاد .</p>

<p>يه چند وقتيه يه سري كارا و بايد انجام بدم كه روي يه برگه نوشتم زدم به ديوار اتاقم و روزا دونه دونه دارن سپري ميشن و حتي يدونش كه تيك نخورده هيچ تازه کلی موضوع دیگه داره بهش اضافه هم ميشه و از اون طرف اين احساس و دارم كه عقب افتادم و اطلاعات مفيد يا مقاله ها تو ذهنم جاشون رو دادن به يه سري ديتاي بيهوده مثل اينكه فيلاني با فلاني ازدواج كرده يا كليپ متعجب كننده اقاي ب يا مثلا عكس هاي مهموني و ماشين هاي گرون قيميت يه سري ها ، اما چي شد كه کارم کشید به اینجا ؟</p>

<p>اولين روزها كه اينستاگرام و نصب كردم با خودم گفتم  باحاله هفته اي يدونه عكس ميزارم براي دوستام كه ببينن تو چه وضعيتي ام و همين طور اونارو چك ميكنم اما اين روال يواش يواش جاشو داد به اينكه هر ٢-٣ روز یکبار عكس بزارم و بعدها كه زمان گذشت تبديل شد به اينكه روزي ٤-٥ ساعت تو اينستاگرام وقت تلف کنم ، چرا ؟ چون عادت كرده بودم بهش و نبودش قابل تحمل برام  نبود و بعد همين طور درگير تلگرام شدم و تو كلي كانال و گروه عضو شدم تا مطالب اموزنده بخونم اما بازم اونم
جاشو داد به يه سري چيزهاي بيهوده مثل اينكه خبر فوري :  فلاني گفت اينطوري ، ايا واقعن لازمه ؟</p>

<p>اين روال اينقدر ادامه دار شده كه الان يه ٢٠-٣٠ دقيقه به كارام ميرسم و تا ميام گرم كار بشم يه پيغام يا نوتيفيكيشن مياد از فلان برنامه که تمام تمرکز ادمو میریزه بهم و مجبوری بری چک کنی و کلا مسیر دیگه عوض میشه تازه بدتر قضيه اينه وقتي ميرم چك كنم ديگه خارج شدن ازشون با خداست ، اينطوري ميشه كه يهو به خودم ميام و ميبينم هم كارمو گذاشتم كنار هم وقتم و هم انرژي و كلي چيزهاي از دست رفته اما واقعا اينو ميخواستم ؟</p>

<p>حالا مگه ميشه ازينا دست كشيد ؟ اينا تبديل به عادت هاي روزمره شدن مثلا ساعت ٥ صبح كه بيدار ميشم همون زير پتو ميرم تو اين برنامه ها تا اتفاقاتي كه تو تايم خوابم پيش اومده رو بخونم و كلا انرژي من اول صبح ميره هوا :))
باشگاه ، خانواده ، دوستام ، كارم ، اموزش و كلي چيز و از دست دادم جاش ٣٠٠ تا فالوعر تو اينستاگرام  و عضو ١٠ تا كانال پربازديد تو تلگرام شدم .</p>

<p>ديگه اين شد كه يهو به خودم اومدم با يه تلنگر كوچيك طور و با يه تصميم اينستاگرام رو پاك كردم كلا و كانال هاي تلگرام رو يه تجديد نظر كردم و داره نوبت توييتر ميشه كه يه دستي به سر و گوشش بكشم .
اميدوارم شما هم اگه همين مشكل من رو دارين يه تصميم اينجوري بگيرين و از شر اينا خلاص بشين .</p>
]]></content>

    <summary>
    &lt;p&gt;
سلام سروش هستم يه مبتدي در حال يادگيري .

امروز ميخوام در مورد يه مشكل كه خيلي وقته دارم باهاش دست و پنجه نرم ميكنم و تازه راه حلشو پيدا كردم يه حرفايي بزنم و ايده اين بود كه شايد بدرد شما هم بخوره و اگه حال و روز منو داشتین به کمکتون بیاد .

يه چند وقتيه يه سري كارا و بايد انجام بدم كه روي يه برگه نوشتم زدم به ديوار اتاقم و روزا دونه دونه دارن سپري ميشن و حتي يدونش كه تيك نخورده هيچ تازه کلی موضوع دیگه داره بهش اضافه هم ميشه و از اون طرف اين احساس و دارم كه عقب افتادم و اطلاعات مفيد يا مقاله ها تو ذهنم جاشون رو دادن به يه سري ديتاي بيهوده مثل اينكه فيلاني با فلاني ازدواج كرده يا كليپ متعجب ك&lt;/p&gt;
    </summary>
  </entry>
  
  <entry>
    <title>اصول استاد فو</title>
    <link href="https://thecoci.me/farsi/اصول-استاد-فو/"/>
    <id>https://thecoci.me/farsi/اصول-استاد-فو/</id>

    <published>2018-01-26T02:39:48+0200</published>
    <updated>2018-01-26T02:39:48+0200</updated>

    <content type="html"><![CDATA[<a name="more"></a>
<p>سلام سروش هستم يه گيك ( اگه نميدوني گيك يعني چي يا تو اينترنت يه سرچ بزن يا پا نوشت اين پست رو بخون ) .</p>

<p>خوب رسيديم به جاهاي خوب قضيه ، كاش پست قبلي رو خونده باشي اما اگه نخوندي اينجا ميتوني پيداش كني : <a href="http://3nzo.com/farsi/سلام-دنیا/"><strong>سلام دنیا</strong></a></p>

<p>خوب حالا ميريم سراغ يه سري اصول قبل شروع برنامه نويسي كه بد نيست بهش اشاره اي بشه و حتما مطالعه كنين ، زياد سخت نگيرين بالاخره هر كاري مقدماتي داره كه به  يك سري از مهم هاش اينجا اشاره ميكنم :</p>

<ol>
<li>زبان انگليسي :</li>
</ol>

<p>واقعا مهمترين قسمتش و اصلي ترينش اين بود بنظرم ، میپرسی چرا ؟
چون اول اينكه ما هرچي مرجع اموزش درست حسابي و بدرد بخور داريم به زبان انگليسي نگارش شده و اصل قضيه اينِ كه زبان استفاده شده تو كامپيوتر انگليسي هست و همه آدما تقريبا از مرجع هاي انگليسي استفاده ميكنن ، پس نه در حد بنز ولي در حد معقولي نيازه ، پيشنهاد من اينه اگه در حدي كه يه مقاله يا اموزش رو بتونين بخونين قوي نيستين حتما قبل از شروع سعي كنين از راه هاي مختلفي كه هست بنا به سليقه خودتون اين مهارت و تقويت كنين ( من خودم فقط لغت حفظ ميكنم ) .</p>

<ol>
<li>حوصله :</li>
</ol>

<p>اين چيزيه كه واقعا همه ما مخصوصا نسل جوان باهاش مشكل داريم ، همه ميخوان شب بخوابن صبح که بيدار شدن برنامه نويس خيلي ماهر شده باشن اما اين كار اصلا شدني نيست و به زمان نياز داره و يه جمله اي هست ميگه اگه ١٠٠٠٠ ساعت ، توجه كنين ١٠ هزار ساعت تو هر رشته اي كار كنين و اموزش ببينين ميشه بهتون گفت اوستا :))
پس تفكرات يه شب و يك سال رو بندازين دور و با يه برنامه منسجم و با انگيزه كافي ادامه بدين .</p>

<ol>
<li>آموزش :</li>
</ol>

<p>به طور خلاصه بگم هيچ وقت نيست كه يه آدم بگه ديگه من همه چي رو بلدم و نيازي به آموزش نيست حتي بعد اون ١٠٠٠٠ ساعت هم نياز به آموزش دارين دليلش هم اينِ كه هروز تكنولوژي پيشرفت ميكنه پس از همين آلان تا آخر عمر آموزش و فراموش نكنين و نكته آخر اينِ كه هروقت به اين فكر افتادين دقيقا همين نقطه دارين از همه چيز عقب مي افتين .</p>

<ol>
<li>انتخاب مسير :</li>
</ol>

<p>واقعا خيلي ها رو ديدم خودشون هم نميدونن چي ميخوان ، چون براي ٢٠ دقيقه هم كه شده ننشستن يه گوشه و به آينده و علاقه فكر كنن ، اين واقعا مهمه و از همين الان با تحقيق و هر راهي كه براي شما كار ميكنه مشخص كنين تو كدوم رشته قراره كار كنين مثلا برنامه نويسی وب يا موبايل يا ……… قراره باشين .
اين بهتون كمك ميكنه تو مسير جاده خاكي نرين و يه چيزي كه بايد توجه كنين هيچ وقت نيست كه يه آدم تو همه رشته ها استاد شده باشه .</p>

<ol>
<li>انتخاب زبان برنامه نويسي :</li>
</ol>

<p>بعد اينكه مشخص كردين قرارِ تو كدوم فيلد كار كنين بايد زبان برنامه نويسي مناسب و انتخاب كنين مثلا :
انتخاب ميكنين كه ميخواين تو فيلد وب ( web ) فعاليت كنين حالا اين وسط كلي زبان برنامه نويسي هست براي اين كار مثل :
php , javaScript , python ,.......
اينا با يه سرچ خيلي ساده و حتي مشورت با بزرگان اين حوضه مشخص ميشه .</p>

<ol>
<li>دوست عزيز و گرامي گوگل :</li>
</ol>

<p>مردم يه سرچ هايي ميكنن تو گوگل در حد جام ملت هاي گینه بیسائو ( دانلود آهنگي كه تو ماشين ممد داشت پخش ميكرد ) :))
از همين الان ياد بگيرين هر چي سوال و نكته تو ذهنتون هست تو گوگل براش جواب هست ، اينو ياد بگيرين كه از گوگل اين منبع بي نهايت اطلاعات استفاده كنين ، اگه آدرسش رو ندارين تو گوگل سرچ كنين آدرس گوگل :)) ( مثلا خيلي با نمك ام ) ( www.google.com )</p>

<ol>
<li>سيستم آموزش :</li>
</ol>

<p>خيلي متدهاي آموزشي هست مثلا :
فيلم هاي آموزشي
كتاب هاي آموزشي
كلاس هاي آموزشي
پروژه محور
خود آموزشي
اينايي كه بالا گفتم همش روش هاي يادگيري هست ، اينجاي داستان بايد ببينين كدوم براي شما كار ميكنه و طبق همون براي آموزش اقدام كنين ولي نظر شخصي من اينه هركسي ميتونه از روش خود آموزي استفاده كنه و براش جواب ميده ولي نظر علمي نيست و در حد يه نظرِ پس اين قسمت با خودتون .</p>

<ol>
<li>بزرگان :</li>
</ol>

<p>دیگه توضیح لازم نداره فکر کنم ، بزرگان هر حوضه رو پیدا کنید و ازشون کمک و مشورت بخواین ، البته باید بگم واقعا روحیه ایرانی ما تو این موضوع عالیه واقعا و در صورت داشتن وقت همه به هم کمک میکنن ، در این بین عضویت در گروه های برنامه نویسی خالی از لطف نیست</p>

<ol>
<li>چرخ اختراع شده :</li>
</ol>

<p>لطفا سعی نکیند چرخ رو خودتون اختراع کنید ، این یک بار قبلا اختراع شده و بجای اتلاف وقت از تجربیات دیگران استفاده کنید .</p>

<p>اينا بنظرم مهم ترين هاش بود ،اگه كم و كاستي داشت به خوبي خودتون ببخشين ديگه ، تا همين قدر از دستم بر می آمد . منتظر نظرات شما هستم كه شديد تو اين اوضاع باعث دلگرمي من ميشه و حتي اگه به نظرتون خوب نيست و اشتباه داره حتما بگين كه نواقص برطرف شه يا مثلا اگه موضوعي از قلم جا افتاده بگین كه اصلاحات انجام بشه .</p>

<p>ايده اصلی :  باهم كمك كنيم دنيا جاي بهتري براي زندگي بشه .</p>

<p>پ.ن : گيك يعني آدمي كه عاشق تكنولوژي و يادگيريش هست .</p>

<p>The best way to prepare [to be a programmer] is to write programs, and to study great programs that other people have written. In my case, I went to the garbage cans at the Computer Science Center and fished out listings of their operating system.
<center dir="ltr">Bill Gates</center></p>
]]></content>

    <summary>
    &lt;p&gt;سلام سروش هستم يه گيك ( اگه نميدوني گيك يعني چي يا تو اينترنت يه سرچ بزن يا پا نوشت اين پست رو بخون ) .

خوب رسيديم به جاهاي خوب قضيه ، كاش پست قبلي رو خونده باشي اما اگه نخوندي اينجا ميتوني پيداش كني : سلام دنیا

خوب حالا ميريم سراغ يه سري اصول قبل شروع برنامه نويسي كه بد نيست بهش اشاره اي بشه و حتما مطالعه كنين ، زياد سخت نگيرين بالاخره هر كاري مقدماتي داره كه به  يك سري از مهم هاش اينجا اشاره ميكنم :

زبان انگليسي :

واقعا مهمترين قسمتش و اصلي ترينش اين بود بنظرم ، میپرسی چرا ؟
چون اول اينكه ما هرچي مرجع اموزش درست حسابي و بدرد بخور داريم به زبان انگليسي نگارش شده و اصل قضيه اينِ كه زبان اس&lt;/p&gt;
    </summary>
  </entry>
  
  <entry>
    <title>سلام دنیا</title>
    <link href="https://thecoci.me/farsi/سلام-دنیا/"/>
    <id>https://thecoci.me/farsi/سلام-دنیا/</id>

    <published>2018-01-23T19:00:52+0200</published>
    <updated>2018-01-23T19:00:52+0200</updated>

    <content type="html"><![CDATA[<a name="more"></a>
<p>سلام سروش ام  يه گيك ، يه مسئله اي كه برام جذاب بود و گفتم با شما اشتراك بزارم .</p>

<p>چند وقتي ايه كه تكنولوژي با سرعتي غير قابل تصوري داره پيشرفت ميكنه از دستگاه ها  و لوازم خانگي هاي مجهز به اينترنت ( اينترنت چيزها ) گرفته تا ماشين هاي خودراننده تا تلفن هاي هوشمند و ساعت ها يا مثلا VR ( واقعيت مجازي ) ، هوش مصنوعي ( AI) و يادگيري ماشين ( machine learning ) كه هيچ كس نميدونه دارن به كجا ميرن ، احمالا دارن ميرن هوا :))</p>

<p>اما اين وسط يه حلقه گمشده اي وجود داره كه اونم دستوراتي و برنامه هايي هست كه رو اينا اجرا ميشه كه بحث بزرگي  رو بوجود مياره به اسم برنامه نويسي كه كاملا مفصل در موردش تو پست هاي بعدي صحبت ميكنيم اما اهميت برنامه نويسي هروز داره بيشتر و بيشتر ميشه و تو جدول پر درامد ترين مشاغل دنيا روز به روز ترفيع درجه گرفته تا رسيده به جايگاه اول جدول ، بزن دست قشنگ رو :))
در راستا اين مسئله كه البته نگراني هاي احتمالي هم داره خيلي از شركت ها سعي دارن پروژه هايي براي اينكه همه مردم برنامه نويسي رو يادبگيرن در دستور كار قرار دادن مثلا شركت اپل پروژه everyone can code ( همه ميتونن برنامه نويسي كنن ) و كلي شركت ديگه با كلي ايده فان و جذاب رو راه انداختن  اما واقعا چرا اين قدر اين مسئله مهم شده؟</p>

<p>خوب اين سوال خيلي باحاليه و جوابش باحال تر، اوليش و اصليش اينه كه تو اين روز ها خيلي از كارهاي مهم و وقت گير ادمها رو همين سيستم ها دارن انجام ميدن مثل تراكنش ها ، خريد هاي اينترنتي ، خريد بليط ، كنترل شركت و كارخانجات ، سيستم هاي هوشمند و ارتباطات ما با اون سر دنيا تا تشخيص و درمان بيماري ها و كلي چيزهاي ديگه كه همگي وابسته به برنامه نويسي هستن و حتي ميتونن تو خيلي كارهاي شخصي به كمك ما بيان مثلا چند وقت پيش يه برنامه نوشته بودم كه وقتي قيمت فلان سهم از فلان شركت به قيمت n تومن رسيد برنامه بهم يه sms بفرسته كه وقت فروش يا خريد رسيده يا يه برنامه با نمك ديگه كه هنوزم داره كار ميكنه اينه كه هروز صبح مياد چك ميكنه هوا اگه باروني بود با sms بهم ياداوري ميكنه چتر فراموش نشه ،</p>

<p>اينا تنها يه نمونه كوچيك از برنامه هايي كه ميتونيم خودمون بنويسيم تا كمكمون كنه پس فكر كنم ايده بدي نباشه اگه علاقه داريم و به عنوان رشته كاري اينده كه حتي ميتونه شعل دوم ما باشه روش كار كنيم ، اما به هر حال من اينجا نيستم تا ادما رو متقاعد كنم كه برنامه نوسي رو ياد بگيرن در هر صورت  اون دسته از دوستاني كه يا وقت نكردن يا انگيزه كافي نداشتن و يا هر مسئله ديگه كه باعث شده اين موضوع رو شروع نكنن شاید این موضوع کمکشون کنه.
فرض رو بر اين ميگيريم شما علاقه داري  ، وقت داري ( نگو ندارم كه همش بهونه است ) و انگيزه هم پيدا كردي .
خوب ايده اصلي اين ماجرا اينه يه سري چيز ها بنويسيم تا به درد يه سري ادمها بخوره ، اگه شما هم مثل من نفهميدين چي گفتم منظور اينه كه يه سري اموزش هاي پايه و مقدماتي و اينجا با هم شروع كنيم تا پله اولي باشه تو برنامه نويسي و ديگه نقشه راه رو پيدا كنين و بقيه مسير رو خودتون ادامه بدين .
تو پست بعدي از اولين مبحث ( اصن كامپيوتر چي هست و برنامه نويسي چطوري كار ميكنه ) شروع ميكنيم به توضيح و همچنین خيلي خوشحال ميشم تو قسمت كامنت ها نظرتونو وهرگونه پيشنهادي که در مورد اين ايده دارید با من درميان بذارين .</p>

<p>Learning to write programs stretches your mind, and helps you think better, creates a way of thinking about things that I think is helpful in all domains.
<center dir="ltr">Bill Gates</center></p>
]]></content>

    <summary>
    &lt;p&gt;سلام سروش ام  يه گيك ، يه مسئله اي كه برام جذاب بود و گفتم با شما اشتراك بزارم .

چند وقتي ايه كه تكنولوژي با سرعتي غير قابل تصوري داره پيشرفت ميكنه از دستگاه ها  و لوازم خانگي هاي مجهز به اينترنت ( اينترنت چيزها ) گرفته تا ماشين هاي خودراننده تا تلفن هاي هوشمند و ساعت ها يا مثلا VR ( واقعيت مجازي ) ، هوش مصنوعي ( AI) و يادگيري ماشين ( machine learning ) كه هيچ كس نميدونه دارن به كجا ميرن ، احمالا دارن ميرن هوا :))

اما اين وسط يه حلقه گمشده اي وجود داره كه اونم دستوراتي و برنامه هايي هست كه رو اينا اجرا ميشه كه بحث بزرگي  رو بوجود مياره به اسم برنامه نويسي كه كاملا مفصل در موردش تو پست هاي بع&lt;/p&gt;
    </summary>
  </entry>
  
</feed>