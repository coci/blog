<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>سروش صفری</title>

  <link href="https://thecoci.me/swift//feed.xml" rel="self"/>
  <link href="https://thecoci.me/swift/"/>

  <updated>2018-05-31T01:26:12+0330</updated>
  <id>https://thecoci.me/swift/</id>
  
  <author>
    <name>سروش صفری</name>
  </author>
    
  <generator>Mira</generator>

  
  <entry>
    <title>آموزش سوئیفت قسمت ۳ - انواع دیتا</title>
    <link href="https://thecoci.me/swift/datatype/"/>
    <id>https://thecoci.me/swift/datatype/</id>

    <published>2018-05-30T08:54:12+0330</published>
    <updated>2018-05-30T08:54:12+0330</updated>

    <content type="html"><![CDATA[<a name="more"></a>
<h2>انواع دیتا</h2>

<p>ما چندین نوع دیتا داریم که شما یکی از مهم ترین نوع دیتا رو دیدین حتما میپرسین کی ؟ کجا ؟ همون موقع که یه متن رو داخل متغییر ذخیره کردین و متن توی سوئیفت به اسم String شناخته میشه (رشته ای از کاراکترها) .</p>

<p>استرینگ میتونه خیلی طولانی باشه (چندین میلیون حرف) ویا کوچیک (یک حرف) یا حتی خالی باشه ٬تعداد اصلا مهم نیست  و هر تعداد حرف توی سوئیفت به چشم String دیده میشه .سوئیفت میدونه اون متغیر name که تو اموزش قبل ساختیم داره دیتا از نوع String رو نگه داری میکنه چون وقتی داشتین متغیر و می ساختین دیتایی از نوع String داخلش قرار دادین : "soroush safari"</p>

<p>اما اگه شما طبق مثال زیر عمل کنید سویفت از شما ایراد میگیره :</p>

<pre><code>var name
name = "soroush sfari"
</code></pre>

<p>و متن خطا میگه : "type annotation missing in pattern" معنیش اینه که : "من نمیتونم بفهمم متغیر name از چه نوع دیتا هست چون شما مقدار کافی به من اطلاعات در موردش ندادین " .</p>

<p>در این مرحله شما ۲ تا گزینه دارین : یا اینکه متغیر رو بسازین و در همون خط اول کد مقدار دهی اولیه کنید یا از Type annotation استفاده کنید . که این روش اینطوریه که شما همون اول به سویفت میگین چه نوع دیتایی قراره <strong>بعدا</strong> داخل متغیر ذخیره کنید .</p>

<p>شما گزینه اول رو تو اموزش قبل دیدین پس نگاه کنید گزینه دوم چطوری کار میکنه . ما میدونیم متغیر name قراره دیتایی از نوع String ذخیره کنه پس میتونیم به سویفت اینو بگیم ب یک colon ( به ۲ نقطه روی هم colon گفته میشه = : ) و بعد String ٬ مثل مثال زیر :</p>

<pre><code>var name: String
name = "soroush safari"
</code></pre>

<p>الان دیگه شما Error از Xcode دریافت نمی کنین چون سویفت میدونه  متغیر name قراره در <strong>اینده</strong> چه نوع دیتایی رو ذخیره کنه .</p>

<p><strong>نکته</strong> : بعضی از مردم قبل و بعد از colon یه فاصله ای قرار میدن : var name : String ٬ اما اونا اشتباه میکنن و شما باید ازین کار اجتناب کنید .</p>

<p>ما در اینجا  اینو یادگرفتیم که سویفت همیشه میخواد بدونه چه نوع دیتایی داخل  هر متغیر یا ثابتی قراره ذخیره بشه . شما نمیتونین بیخیال این قضیه بشن و این ماجرا خیلی خوبه چون به این کار میگن type safety  (بعضی چیزا رو نمیشه به فارسی برگردوند) - اگه شما به سویفت بگین قرار داخل متغیری String ذخیره کنید و بعدا دیتایی از نوع دیگه ذخیره کنید سویفت از شما ایراد میگیره و از اشتباهات آتی جلوگیری میکنه .</p>

<p>اما حالا میپردازیم به یکی دیگه از نوع های مهم سویفت به اسم Int که مخفف شده : integer ( عدد <em>*صحیح *</em> )  است . integer عدد رند صحیح است مثل : ۳ ٬ ۳۰ ٬ ۳۰۰ یا حتی ۱۶۷۷۷۲۱۶- برای مثال : </p>

<pre><code>var name: String
name = "soroush safari"

var age: Int
age = 25
</code></pre>

<p>نکته مهم اینجا اینه که وقتی دارین نوع دیتا رو تایپ میکنید String یا Int حتما حروف اولش باید با حرف بزرگ باشه ولی برای name و age نیازی نیست - این قرارداد استاندار در سویفت که همین اول کار سعی کنید حتما ازش پیروی کنید . </p>

<p>ما الان ۲ تا متغیر از ۲ نوع مختلف data داریم ٬ که میتونین قدرت type safety توی این مثال ببینین   :</p>

<pre><code>var name: String
name = 23

var age:Int
age = "soroush safari"
</code></pre>

<p>این خط کد بالا رو با کد قبلی توی playground عوض کنید . توی این کد شما دارین سعی میکنین یه مقدار Int رو داخل یه متغیر از نوع String قرار میدین که Xcode وارد عمل میشه و یه Error به شما نمایش میده که این خیلی عالیه و قدرت سویفت رو نشون میده .</p>

<h2 id="floatdouble:">Float و Double :</h2>

<p>اجازه بدین به ۲ تا data type دیگه نگاهی بندازیم یه اسم های Float و Double  . این ۲ نوع data type راهیه که سویفت عدد های اعشاری رو میتونه ذخیره میکنه مثل : ۳.۱ ٬ ۳.۱۳۱ ٬ ۳.۱۴۱۵۹۲۶ یا حتی ۱۶۷۷۷۲۱۶.۵-  .</p>

<p>اینجا ۲ نوع دیتا داریم برای اینکه شما مشخص کنید چقدر دقت لازم دارین اما در بیشتر مواقع خور شرکت اپل میگه از Double استفاده کنید چون دقت بالاتری در اعشار داره .</p>

<p>این کدها رو داخل playground قرار بدین  :</p>

<pre><code>var latitude: Double
latitude = 36.166667

var longitude: Float
longitude = -86.783333
</code></pre>

<p>شما میتونین این ۲ تا عدد سمت راست مشاهده کنید اما اگه دقت کنید یه اختلافی میبینید  . ما گفتیم longitude برابر با 86.783333- باشه اما قسمت نتیجه نوشته 86.78333- و در اینجا یک دونه از عدد ۳ رو ننوشته ٬ این دقیقا همون بحث دقت بود که گفتم و اینکه Float تا رقم اعضار کمتری رو ذخیره میکنه .</p>
]]></content>

    <summary>
    &lt;p&gt;انواع دیتا

ما چندین نوع دیتا داریم که شما یکی از مهم ترین نوع دیتا رو دیدین حتما میپرسین کی ؟ کجا ؟ همون موقع که یه متن رو داخل متغییر ذخیره کردین و متن توی سوئیفت به اسم String شناخته میشه (رشته ای از کاراکترها) .

استرینگ میتونه خیلی طولانی باشه (چندین میلیون حرف) ویا کوچیک (یک حرف) یا حتی خالی باشه ٬تعداد اصلا مهم نیست  و هر تعداد حرف توی سوئیفت به چشم String دیده میشه .سوئیفت میدونه اون متغیر name که تو اموزش قبل ساختیم داره دیتا از نوع String رو نگه داری میکنه چون وقتی داشتین متغیر و می ساختین دیتایی از نوع String داخلش قرار دادین : &quot;soroush safari&quot;

اما اگه شما طبق مثال زیر عمل کنید سوی&lt;/p&gt;
    </summary>
  </entry>
  
  <entry>
    <title>آموزش سوئیفت قسمت ۲ - متغییر و ثابت ها</title>
    <link href="https://thecoci.me/swift/variableandconstant/"/>
    <id>https://thecoci.me/swift/variableandconstant/</id>

    <published>2018-05-30T08:52:58+0330</published>
    <updated>2018-05-30T08:52:58+0330</updated>

    <content type="html"><![CDATA[<a name="more"></a>
<h2 id="variablesandconstants:">ثابت ها و متغییر ها (Variables and constants ) :</h2>

<p>هر برنامه ای نیاز داره تا اطلاعاتش رو تو یه جایی ذخیره کنه ٬ و توی Swift ما ۲ تا راه برای این کار داریم :</p>

<p>متغیرها و ثابت ها </p>

<p>متغیر محلی برای ذخیره اطلاعات که میشه مقدارش رو هروقت که خواستیم تغییر بدیم و ثابت محلی برای ذخیره اطلاعات که شما یه بار توش اطلاعاتی رو ذخیره میکنید و دیگه هیچ وقت نمیشه تغییرش داد . پس متغیر دارای اطلاعاتی که قابل تغییر و ثابت دارای اطلاعاتی که نمیشه تغییرش داد می باشد - آسون بود ٬ درسته ؟</p>

<p>داشتن هر ۲ روش ممکنه بیهوده به نظر برسه و شما با خودتون بگین یه متغییر میسازم و هیچ وقت اطلاعاتش و تغییر نمیدم ٬ چه نیازی به ثابت هست ؟ اما ممکنه اشتباه کنیم .</p>

<p>یکی از فایده های جدا سازی متغییر و ثابت اینه که Xcode به ما میگه اگه اشتباه کنیم مثلا : اگه من بگم این اطلاعات  ثابت هست و هیچ وقت تغییر نمیکنه چون همون لحظه میدونم این قرار نیست تغییر کنه اما بعدش ۱۰ خط پایین تر ممکنه فراموش کنم و بخوام اطلاعات داخل constant رو عوض کنم اینجاست که این قابلیت به کمک ما میاد و میگه داری اشتباه میزنی این تغییر ناپذیره :))</p>

<p>و در اخر اینکه برنامه وقتی میدونه این اطلاعات ثابت هست میتونه راحتتر و سریع تر اجرا بشه ٬ پس ثابت ها چیز مهمی هستند .</p>

<p>توی Swift ما میتونیم یه متغیر با دستور Var بسازیم مثل این :</p>

<pre><code>var name = "Soroush safari"
</code></pre>

<p>اجازه بدین اینو داخل playground قرار بدیم و نتیجه رو ببنیم . همه چیز رو به جز خط import UIkit پاک کنید و متغییر و زیرش اضافه کنید و شما باید چیزی شبیه این رو ببینید :</p>

<p><img src="/swift/images/3-swift.jpg" alt="xcode" id="xcode" /> </p>

<p>اما نیاز نیست هر بار از var استفاده کنید این فقط برای زمانی که شما دارین یه متغیر رو میسازین ٬ این کد رو توی playground تست کنید :</p>

<pre><code>var name = "soroush safari"
name = "Romeo"
</code></pre>

<p>پس اولین خط یه متغیر به اسم name میسازه که با "soroush safari" مقدار دهی اولیه شده و بعد در خط دوم ما اطلاعات داخل متغیر name رو update کردیم به "Romeo" و حالا مقدار متغیر name دیگه "soroush safari" نیست و به "Romeo" تبدیل شده . </p>

<p>حالا چی میشه اگه ما یه ثابت بسازیم به جای متغیر ؟ جالبه ٬ برای ساخت ثابت یا همون constant از کلمه let به جای var استفاده میکنیم ٬ پس شما میتونین خط اول کدتون رو تغییر بدین به let name به جای var name  :</p>

<pre><code>import UIkit

let name = "soroush safari"
name = "Romeo"
</code></pre>

<p>اما یه مشکلی اینجا هست : xcode یه علامت قرمز رنگ به عنوان Error به شما نشون داده ( سمت چپ name ) و اگه شما روی اون علامت کلیک کنید متن خطا به شما میگه :  <em>*“   'Cannot assign to 'let' value 'name  ” *</em></p>

<p>در اصل میگه شما سعی کردین مقدار ثابت توی خط دوم رو تغییر بدین که این امکان پذیر نیست ٬ فوق العاده نیست ؟</p>

<p><img src="/swift/images/4-swift.jpg" alt="xcode" id="xcode" /> </p>

<p>پس ثابت ها بهترین راه هستند که به خودمون و Xcode قول بدیم این مقدار عوض نخواهد شد ٬ به این خاطر که اگه شما اشتباه بکنین Swift از اجرا شدن برنامه جلوگیری میکنه .</p>

<p><em>نکته مهم</em> :</p>

<p>اسم متغیر و ثابت باید تک باشه (unique) ٬ اگه مثل زیر متغیر و ثابت با یک اسم بسازین Xcode از کد شما ایراد میگیره :</p>

<pre><code>import UIkit

let name = "soroush safari"
var name = "Romeo"
</code></pre>

<p>منتظر قسمت بعد باشید :))</p>
]]></content>

    <summary>
    &lt;p&gt;ثابت ها و متغییر ها (Variables and constants ) :

هر برنامه ای نیاز داره تا اطلاعاتش رو تو یه جایی ذخیره کنه ٬ و توی Swift ما ۲ تا راه برای این کار داریم :

متغیرها و ثابت ها 

متغیر محلی برای ذخیره اطلاعات که میشه مقدارش رو هروقت که خواستیم تغییر بدیم و ثابت محلی برای ذخیره اطلاعات که شما یه بار توش اطلاعاتی رو ذخیره میکنید و دیگه هیچ وقت نمیشه تغییرش داد . پس متغیر دارای اطلاعاتی که قابل تغییر و ثابت دارای اطلاعاتی که نمیشه تغییرش داد می باشد - آسون بود ٬ درسته ؟

داشتن هر ۲ روش ممکنه بیهوده به نظر برسه و شما با خودتون بگین یه متغییر میسازم و هیچ وقت اطلاعاتش و تغییر نمیدم ٬ چه نیازی به ثابت&lt;/p&gt;
    </summary>
  </entry>
  
  <entry>
    <title>آموزش سویفت قسمت ۱ - نصب ایکس کد</title>
    <link href="https://thecoci.me/swift/howtoinstallxcode/"/>
    <id>https://thecoci.me/swift/howtoinstallxcode/</id>

    <published>2018-05-30T08:49:23+0330</published>
    <updated>2018-05-30T08:49:23+0330</updated>

    <content type="html"><![CDATA[<a name="more"></a>
<h2 id="xcodepalyground:">چگونه Xcode رو نصب کنیم و یک palyground بسازیم :</h2>

<p>خوب بریم سر اصل مطلب ٬ Xcode محیطی برای برنامه نویسی برای محصولات اپل است که بصورت رایگان در App stpre مک وجود داره ٬ پس اولین حرکت این که روی این لینک کلیک کنید تا به صفحه نصب برین : <a href="https://itunes.apple.com/us/app/xcode/id497799835?mt=12"><strong>نصب ایکس کد</strong></a></p>

<p>خوب حجم xcode یکم زیاده پس تا دانلود میشه من میتونم چند تا چیز رو براتون توضیح بدم :</p>

<ol>
<li>ios :</li>
</ol>

<p>ای اوا اس اسم سیستم عاملی که روی تمام ایفون و ایپد ها اجرا میشه . ای او اس مسئول اجرای تمام عملکردهای پایه ای گوشی مثل :  تماس گرفتن ٬ اجرا اپلیکیشن و …. رو داره .</p>

<ol>
<li>macOs :</li>
</ol>

<p>مک او اس اسم سیستم عاملی که روی لپ تاپ و کامپیوترهای اپل اجرا میشه و به صورت فنی پدر بزرگ ios و tvOs میباشد :))</p>

<ol>
<li>Swift :</li>
</ol>

<p>سویفت اسم زبان برنامه نویسی اپل که به شما اجازه میده برای ios , macOs , tvOs برنامه بنویسین .</p>

<ol>
<li>UIkit :</li>
</ol>

<p>یو ای کیت در اصل یک سری ابزار برای  رابط کاربری( ui = user interface ) ای او اس است مثل : دکمه ها ٬ کادر نوشته ٬ ناوبری و…. که شما با استفاده از سویفت از این ها استفاده میکنید </p>

<ol>
<li>ios simulator :</li>
</ol>

<p>این برنامه همراه با xcode نصب میشه و دقیقا مثل یه ایفون کارمیکنه . به شما اجازه میده اپ ios که ساختین رو بدون نیاز به گوشی ایفون اجرا و تست کنید .</p>

<ol>
<li>playground :</li>
</ol>

<p>محیطی کوچیک برای تست کردن کدهای Swift که به شما اجازه میده داخلش کد بنویسید و بلافاصه نتیجه رو ببنید . شما داخلش یه اپ واقعی نمیسازین اما برای یادگیری خیلی مفیده که ما کمی جلوتر ازش استفاده میکنیم . </p>

<ol>
<li>Cocoa touch :</li>
</ol>

<p>در اصل میشه بهش گفت فریمورک بزرگ اپل که شامل همه چیز هست مثل : UIkit , Mapkit , core Graphics و ………..</p>

<p>جدی Xcode نصب شد ؟ خب بریم برای ادامه ……</p>

<h2 id="playground:">معرفی playground :</h2>

<p>وقتی شما Xcode رو اجرا میکنین با چیزی شبیه به عکس زیر مواجه میشین . به قسمت Get started with playground برین .</p>

<p><img src="/swift/images/1-swift.jpg" alt="xcode" id="xcode" /> </p>

<p>xcode از شما اسم فایل playground که ساختین رو میخواد اما همون " MyPlayground " خوبه و وقتی شما next رو بزنین ازتون جایی که این فایل رو سیو کنه میخواد پس دسکتاپ رو انتخاب کنید و create رو بزنین .</p>

<p>اگه مراحل بالا رو به درستی انجام داده باشین playground براتون باز میشه که به ۲ قسمت تقسیم شده که سمت چپ یه سری نوشته هست :</p>

<pre><code>//: Playground - noun: a place where people can play
import UIKit

var str = "Hello, playground” 
</code></pre>

<p>و سمت راست هم نوشته : </p>

<pre><code>"Hello, playground"
</code></pre>

<p>این قسمت بندی خیلی مهمه چون یک قسمت مربوط به کد و قسمت دیگه نتیجه کد و سمت چپ شما میتونین روی کد تغییرات ایجاد کنید و سمت راست که قسمت نتیجه است ٬ نتیجه رو ببینین .</p>

<p><img src="/swift/images/2-swift.jpg" alt="xcode" id="xcode" /> </p>

<p>در حالی که شما تایپ میکنید ٬ playground به صورت اتوماتیک کد جدید رو اجرا میکنه و نتیجه رو update میکنه . برای مثال اگه شما فقط بنویسید str شما در قسمت نتیجه خواهید دید که دوباره نوشته شده "hello playground " چون یکبار که شما اونو ساختین و دفعه دوم برای اینکه شما اون رو به اصطلاح call کردین (زیاد درگیر نشین ٬ اگه جایی متوجه نمیشین اصلا نگران نباشین چون در اینده عمیق تر در موردش توضیح میدم ) .</p>
]]></content>

    <summary>
    &lt;p&gt;چگونه Xcode رو نصب کنیم و یک palyground بسازیم :

خوب بریم سر اصل مطلب ٬ Xcode محیطی برای برنامه نویسی برای محصولات اپل است که بصورت رایگان در App stpre مک وجود داره ٬ پس اولین حرکت این که روی این لینک کلیک کنید تا به صفحه نصب برین : نصب ایکس کد

خوب حجم xcode یکم زیاده پس تا دانلود میشه من میتونم چند تا چیز رو براتون توضیح بدم :

ios :

ای اوا اس اسم سیستم عاملی که روی تمام ایفون و ایپد ها اجرا میشه . ای او اس مسئول اجرای تمام عملکردهای پایه ای گوشی مثل :  تماس گرفتن ٬ اجرا اپلیکیشن و …. رو داره .

macOs :

مک او اس اسم سیستم عاملی که روی لپ تاپ و کامپیوترهای اپل اجرا میشه و به صورت فنی پدر ب&lt;/p&gt;
    </summary>
  </entry>
  
</feed>